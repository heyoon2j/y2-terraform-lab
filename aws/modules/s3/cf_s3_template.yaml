---
AWSTemplateFormatVersion: 2010-09-09
Description: >-
  # S3 Bucket Template
  * For AWS CloudFormation - S3 Bucket Template
  * S3 is Simple Storage Service (Object Storage)

  ## Resources
  1. AWS::S3::Bucket
  2. AWS::S3::BucketPolicy


  ## Parameter


Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: "Bucket Configuration"
        Parameters:
          - BucketNameParam
          - BucketKeyEnabledParam
          - KeyIDParam
#          - PolicyDocumentParam


Mappings:
  KMSKeyMap:
    SSEAlgorithm:
      KMS: "aws:kms"
      AES256: "AES256"            
#  DBEngineMap:
#    mariadb:
#      Log:
#        - audit
#        - error
#        - general
#        - slowquery  


Parameters:
  BucketNameParam:
    Description: 'Bucket Name'
    Type: String
    Default: "s3-y2j-cf-test12"
  BucketKeyEnabledParam:
    Description: 'S3 generate Bucket Key using KMS : true, false (Default: false)'
    Type: String
    Default: "true"
    AllowedValues:
#      - 'false'
      - 'true'
  SSEAlgorithmParam:
    Description: ''
    Type: String
    Default: "null"
    AllowedValues:
      - 'null'
      - 'KMS'
      - 'AES256'
  KeyIDParam:
    Description: 'KMS Key ID'
    Type: String
    Default: "null"

#  PolicyDocumentParam:
#    Description: ''
#    Type: String
   

#Rules:


Conditions:
  IsEncrypted: !Not [!Equals [!Ref KeyIDParam, "null"]]
  UsesKMS: !Not [!Equals [!Ref KeyIDParam, "null"]]  


Resources:
  S3Bucket:
    Type: AWS::S3::Bucket
    Properties: 
      BucketName: !Ref BucketNameParam

      # Security
      BucketEncryption: 
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
                SSEAlgorithm: !If [IsEncrypted, "aws:kms", !Ref AWS::NoValue]
                KMSMasterKeyID: !If [UsesKMS, !Ref KeyIDParam, !Ref AWS::NoValue]
            BucketKeyEnabled: !If [IsEncrypted, !Ref BucketKeyEnabledParam, !Ref AWS::NoValue]

      PublicAccessBlockConfiguration: 
        BlockPublicAcls: 'true'
        IgnorePublicAcls: 'true'
        BlockPublicPolicy: 'true'
        RestrictPublicBuckets: 'true'

      OwnershipControls: 
        Rules: # BucketOwnerEnforced| ObjectWriter| BucketOwnerPreferred
          - ObjectOwnership: 'BucketOwnerPreferred'
#      AccessControl: String
#      CorsConfiguration: 
#        CorsConfiguration      


      # Object Management
      VersioningConfiguration: 
          Status: 'Suspended'
      
      ObjectLockEnabled: 'false'
#      ObjectLockConfiguration: 
#        ObjectLockConfiguration
      


      # Bucket Management
#      LifecycleConfiguration: 
#        LifecycleConfiguration

#      LoggingConfiguration: 
#        DestinationBucketName: String
#        LogFilePrefix: String

#      MetricsConfigurations: 
#        - MetricsConfiguration


      Tags:
        - Key: CloudFormationStack
          Value: !Ref 'AWS::StackId'
        - Key: Name
          Value: !Ref BucketNameParam


################## Not Use ##################
#      NotificationConfiguration: 
#        NotificationConfiguration

#      AnalyticsConfigurations: 
#        - AnalyticsConfiguration

#      IntelligentTieringConfigurations: 
#        - IntelligentTieringConfiguration
      
#      InventoryConfigurations: 
#        - InventoryConfiguration

#     ReplicationConfiguration: 
#        ReplicationConfiguration


      # Other

      # Transfer Accelerate for Edge Location (AWS CloudFront)
#      AccelerateConfiguration: 
#        AccelerationStatus: Suspended   # Enabled | Suspended

      # Web Service
#      WebsiteConfiguration: 
#        WebsiteConfiguration



  S3BucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties: 
      Bucket: !Ref BucketNameParam
      PolicyDocument: ''
#        Version: 2012-10-17
#        Statement:
#          - Action:
#              - 's3:GetObject'
#            Effect: Allow
#            Resource: !Join
#              - ''
#              - - 'arn:aws:s3:::'
#                - !Ref DOC-EXAMPLE-BUCKET
#                - /*
#            Principal: '*'
#            Condition:
#              StringLike:
#                'aws:Referer':
#                  - 'http://www.example.com/*'
#                  - 'http://example.net/*'



Outputs:
  S3ARN:
    Description: S3 Bucket ID
    Value: !Ref S3Bucket
    Export:
      Name: !Sub "${AWS::StackName}-BucketArn"
...
