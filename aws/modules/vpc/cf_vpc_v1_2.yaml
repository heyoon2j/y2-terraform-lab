---
AWSTemplateFormatVersion: 2010-09-09
Description: >-
  AWS CloudFormation Sample Template VPC_Single_Instance_In_Subnet: Sample
  template showing how to create a VPC and add an EC2 instance with an Elastic
  IP address and a security group. **WARNING** This template creates an Amazon
  EC2 instance. You will be billed for the AWS resources used if you create a
  stack from this template.
Resources:
  VPC:
    Type: 'AWS::EC2::VPC'
    Properties:
      CidrBlock: 192.16.0.0/16
      Tags:
        - Key: Application
          Value: !Ref 'AWS::StackId'
  Subnet:
    Type: 'AWS::EC2::Subnet'
    Properties:
      VpcId: !Ref VPC
      CidrBlock: 192.16.0.0/24
      Tags:
        - Key: Application
          Value: !Ref 'AWS::StackId'
  InternetGateway:
    Type: 'AWS::EC2::InternetGateway'
    Properties:
      Tags:
        - Key: Application
          Value: !Ref 'AWS::StackId'
  AttachGateway:
    Type: 'AWS::EC2::VPCGatewayAttachment'
    Properties:
      VpcId: !Ref VPC
      InternetGatewayId: !Ref InternetGateway
  RouteTable:
    Type: 'AWS::EC2::RouteTable'
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Application
          Value: !Ref 'AWS::StackId'
  Route:
    Type: 'AWS::EC2::Route'
    DependsOn: AttachGateway
    Properties:
      RouteTableId: !Ref RouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway
  SubnetRouteTableAssociation:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      SubnetId: !Ref Subnet
      RouteTableId: !Ref RouteTable
  InstanceSecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      VpcId: !Ref VPC
      GroupDescription: Enable SSH access via port 22
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: '22'
          ToPort: '22'
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: '80'
          ToPort: '80'
          CidrIp: 0.0.0.0/0
  EC2Instance:
    Type: AWS::EC2::Instance
    DependsOn: AttachGateway
    Properties: 
      AvailabilityZone: "ap-northeast-2a"
      SubnetId: !Ref Subnet
      ImageId: "ami-003ef1c0e2776ea27"
      InstanceType: "t2.micro"
      #Volumes: 
      #  - Device: ''
      #    VolumeId: ''
      EbsOptimized: true
      BlockDeviceMappings:
        # Root Volume
        - DeviceName: /dev/xvda
          Ebs:
            # SnapshotId: 'snap-01b10d61649e94224'
            VolumeSize: 8
            VolumeType: 'gp2'
            # Iops: 1000
            Encrypted: false
            # KmsKeyId: arn:...
            DeleteOnTermination: true
      # IamInstanceProfile: IAM Name
      DisableApiTermination: true
      InstanceInitiatedShutdownBehavior: 'terminate'  
      # KeyName: String
      Monitoring: false
      # Tenancy: 'defulat'    # dedicated / default / host
      UserData: |
        #!/bin/bash
        sudo useradd -G wheel sysadmin -m -u 520
        sudo echo 'Krpricing!12' | passwd --stdin sysadmin
        sudo echo "sysadmin ALL=(ALL) NOPASSWD:ALL" >> /etc/sudoers.d/90-cloud-init-users
        sudo sed -i 's/PasswordAuthentication no/PasswordAuthentication yes/' /etc/ssh/sshd_config
        sudo rm /etc/localtime
        sudo ln -s /usr/share/zoneinfo/Asia/Seoul /etc/localtime
        sudo systemctl restart sshd.service > /dev/null 2>&1;
        sudo yum install -y nginx
        sudo systemctl start nginx.serviceString
      # NetworkInterfaces: 
      #  - NetworkInterface
      # PrivateIpAddress: '192.10.0.5'
      SecurityGroupIds: 
        - !Ref InstanceSecurityGroup
      # SecurityGroups: 
      #  - String
      # SourceDestCheck: Boolean
      Tags: 
        - Key: 'Name'
          Value: 'TestCloudformation'
...