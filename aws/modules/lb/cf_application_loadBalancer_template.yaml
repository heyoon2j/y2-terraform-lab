---
AWSTemplateFormatVersion: 2010-09-09
Description: >-
  # Application Load Balancer Template
  * For AWS CloudFormation - Application Load Balancer Template
  * You must create alb, after create 'Target Group'.


  ## Resources
  1. ElasticLoadBalancingV2::LoadBalancer
  2. ElasticLoadBalancingV2::Listener
  3. ElasticLoadBalancingV2::ListenerRule
  * ElasticLoadBalancingV2::ListenerCertificate : X


  ## Parameter


Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: "Load Balancer Configuration"
        Parameters:
          - LBTypeParam
          - LBNameParam
      - Label:
          default: "Network Configuration"
        Parameters:
          - SchemeParam
          - IpAddressTypeParam
          - SubnetListParam
          - SecurityGroupListParam


Mappings:
  DBEngineMap:
    mariadb:
      Log:
        - audit
        - error
        - general
        - slowquery

Parameters:
  LBTypeParam:
    Description: 'Load Balancer Type'
    Type: String
    Default: 'application'
    AllowedValues:
      - 'application'
      - 'gateway'
      - 'network'
  LBNameParam:
    Description: 'Load Balancer Name (Maximun: 36)'
    Type: String
    MaxLength: 32
    MinLength: 1
    AllowedPattern: "^[^(internal-)][\w-]{1,32}$"

  SchemeParam:
    Description: 'Load Balancer Scheme : internet-facing / internal'
    Type: String
    Default: 'internal'
    AllowedValues:
      - 'internet-facing'
      - 'internal'
  IpAddressTypeParam:
    Description: 'IP Address Type : dualstack / ipv4'
    Type: String
    Default: 'ipv4'
    AllowedValues:
      - 'dualstack'
      - 'ipv4'
  SubnetListParam:
    Description: 'Subnet List'
    Type: CommaDelimitedList
  SecurityGroupListParam:
    Description: 'Security Group List'
    TYpe: CommaDelimitedList


#Rules:


Conditions:
  IsPubSub1: !Not [!Equals [!Select [0, !Ref PubSubAZList], ""]]


Resources:
  LoadBalancer:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      # Basic Configuration
      Type: !Ref LBTypeParam
      Name: !Ref LBNameParam
      Scheme: !Ref SchemeParam
      IpAddressType: !Ref IpAddressTypeParam


      # Network Configuration
      #SubnetMappings: 
      #  - SubnetMapping
      Subnets: 
        - !Ref SubnetListParam
      SecurityGroups: 
        - !Ref SecurityGroupLIstParam


      LoadBalancerAttributes:
        # All LB
        - Key: "deletion_protection.enabled"
          Value: false  # true

        # Application LB and Network LB
#        - Key: "access_logs.s3.enabled"
#          Value: 
#        - Key: "access_logs.s3.bucket"
#          Value: 
#        - Key: "access_logs.s3.prefix"
#          Value: 
#        - Key: "ipv6.deny_all_igw_traffic"
#          Value: 
        # Only Application LB
#        - Key: "idle_timeout.timeout_seconds"
#          Value: 
#        - Key: "routing.http.desync_mitigation_mode"
#          Value: 
#        - Key: "routing.http.drop_invalid_header_fields.enabled"
#          Value: 
#        - Key: "routing.http.x_amzn_tls_version_and_cipher_suite.enabled"
#          Value: 
#        - Key: "routing.http.xff_client_port.enabled"
#          Value: 
#        - Key: "routing.http2.enabled"
#          Value: 
#        - Key: "waf.fail_open.enabled "
#          Value: 
        # Network LB and Gateway LB
#        - Key: "load_balancing.cross_zone.enabled"
#          Value: 

      Tags:
        - Key: CloudFormationStack
          Value: !Ref 'AWS::StackId'
        - Key: Name
          Value: !Ref LBNameParam
      

  Listener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties: 
      LoadBalancerArn: !Ref LoadBalancer
      Protocol: String
      Port: Integer
            
      AlpnPolicy: 
        - String
      Certificates: 
        - Certificate
      DefaultActions: 
        - Action
      SslPolicy: String


  ListenerRule:
    Type: AWS::ElasticLoadBalancingV2::ListenerRule
    Properties: 
      Actions: 
        - Action
      Conditions: 
        - RuleCondition
      ListenerArn: String
      Priority: Integer


 
      Tags:
        - Key: CloudFormationStack
          Value: !Ref 'AWS::StackId'
        - Key: Name
          Value: Fn::Join
            - ''
            - - 'sg-'
              - !Ref NameInfix
              - '-default'



Outputs:
  LoadBalancerId:
    Description: LoadBalancer ID
    Value: !Ref LoadBalancer
    Export:
      Name: !Sub "${AWS::StackName}-LoadBalancerId"
...